{"version":3,"sources":["station.controller.js"],"names":["FuelStation","require","request","bcrypt","auth","StationRegister","req","res","id","body","name","ownername","phonenumber","address","arrivaltime","finishtime","status","stock","queue","pwd","password","salt","genSaltSync","hashSync","fuelStation","diesel","petrol","Car","Van","Bus","Bike","Tuk","save","response","send","message","console","log","login","findOne","compareSync","token","generateAccessToken","toJSON","getAllFuelStation","find","fuelStations","json","getOneFuelStation","params","stationid","station","searchStation","value","trim","$regex","$options","then","stations","searchByAddress","updateStatus","changeStatus","findOneAndUpdate","updatestock","updatelength","car","van","bus","bike","tuk","updateArrivalTime","updateFinishTime","updateDetails","updateStation","getcount","fuealStationData","carCount","vanCount","busCount","bikeCount","tukCount","allCount","count","getCarCount","getVanCount","getBusCount","getBikeCount","getTukCount","module","exports"],"mappings":"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","sourcesContent":["const FuelStation = require('../models/station.model');\r\nconst { request } = require('express')\r\nconst bcrypt = require('bcryptjs');\r\nconst auth = require('../middlewares/token')\r\n\r\nconst StationRegister = async (req, res) => {\r\n    const id = req.body.id;\r\n    const name = req.body.name;\r\n    const ownername = req.body.ownername;\r\n    const phonenumber = req.body.phonenumber;\r\n    const address = req.body.address;\r\n    const arrivaltime = req.body.arrivaltime;\r\n    const finishtime = req.body.finishtime;\r\n    const status = req.body.status;\r\n    const stock = req.body.stock;\r\n    const queue = req.body.queue;\r\n    const pwd = req.body.password;\r\n\r\n    const salt = bcrypt.genSaltSync(10);\r\n    const password = bcrypt.hashSync(pwd, salt);\r\n\r\n    const fuelStation = new FuelStation({\r\n        id,\r\n        name,\r\n        ownername,\r\n        phonenumber,\r\n        address,\r\n        arrivaltime : \"-\",\r\n        finishtime : \"-\",\r\n        status : \"Available\",\r\n        stock : {diesel :0 , petrol: 0},\r\n        queue : {Car :0 , Van: 0 , Bus: 0 , Bike: 0 , Tuk: 0},\r\n        password\r\n    })\r\n\r\n    try {\r\n        let response = await fuelStation.save();\r\n        if (response) {\r\n            return res.status(201).send({ message: \"New Station Registered to the Fuel System\" })\r\n        } else {\r\n            return res.status(500).send({ message: \"Internal server error\" });\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n        return res.status(400).send({ message: \"Error while registering the station to the application\" })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nconst login = async (req, res) => {\r\n    const id = req.body.id;\r\n    const password = req.body.password;\r\n\r\n    try {\r\n        const fuelStation = await FuelStation.findOne({ id: id });\r\n        if (fuelStation) {\r\n            if (fuelStation && bcrypt.compareSync(password, fuelStation.password)) {\r\n                const token = auth.generateAccessToken(id);\r\n\r\n                return res.status(200).send({ ...fuelStation.toJSON(), token });\r\n            }\r\n            else {\r\n                return res.status(400).send({ message: 'Such user does not exist check your credentials' })\r\n            }\r\n        } else {\r\n            return res.status(404).send({ message: 'Such user does not exist' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Such user does not exist check your credentials' })\r\n    }\r\n\r\n}\r\n\r\n\r\nconst getAllFuelStation = async (req, res) => {\r\n    try {\r\n        let fuelStations = await FuelStation.find();\r\n        if (fuelStations) {\r\n            return res.json(fuelStations)\r\n        } else {\r\n            return res.status(404).send({ message: 'Error on retrieving station' })\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal server error' })\r\n    }\r\n}\r\n\r\nconst getOneFuelStation = async (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    try {\r\n        let station = await FuelStation.findOne({\r\n            stationid: id\r\n        });\r\n        if (station) {\r\n            return res.json(station)\r\n        } else {\r\n            return res.status(404).send({ message: 'No such station found' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\nconst searchStation = async (req, res) => {\r\n    let value = req.params.name.trim();\r\n\r\n    try {\r\n        let station = await FuelStation.find();\r\n        if (station) {\r\n            FuelStation.find({ name: { $regex: \"^\" + value + \".*\", $options: 'i' } }).then((stations) => {\r\n                res.json(stations)\r\n\r\n            })\r\n        } else {\r\n            return res.status(404).send({ message: 'No such station found' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\nconst searchByAddress = async (req, res) => {\r\n    let value = req.params.address.trim();\r\n\r\n    try {\r\n        let station = await FuelStation.find();\r\n        if (station) {\r\n            FuelStation.find({ address: { $regex: \"^\" + value + \".*\", $options: 'i' } }).then((stations) => {\r\n                res.json(stations)\r\n\r\n            })\r\n        } else {\r\n            return res.status(404).send({ message: 'No such station found' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\nconst updateStatus = async (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    const fuelStation = await FuelStation.findOne({ stationid: id });\r\n\r\n    const password = fuelStation.password;\r\n\r\n    const name = fuelStation.name;\r\n    const ownername = fuelStation.ownername;\r\n    const phonenumber = fuelStation.phonenumber;\r\n    const address = fuelStation.address;\r\n    const arrivaltime = fuelStation.arrivaltime;\r\n    const finishtime = fuelStation.finishtime;\r\n    const stock = fuelStation.stock;\r\n    const queue = fuelStation.queue;\r\n\r\n    const changeStatus = {\r\n        id: id,\r\n        name: name,\r\n        ownername: ownername,\r\n        phonenumber: phonenumber,\r\n        address: address,\r\n        arrivaltime: arrivaltime,\r\n        finishtime: finishtime,\r\n        status: req.body.status,\r\n        stock: stock,\r\n        queue: queue,\r\n        password: password\r\n\r\n    }\r\n\r\n    try {\r\n        const response = await FuelStation.findOneAndUpdate({ stationid: id }, changeStatus);\r\n        if (response) {\r\n            return res.status(200).send({ message: 'Successfully updated' })\r\n        } else {\r\n\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Unable to update' })\r\n    }\r\n\r\n}\r\n\r\nconst updatestock = async (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    const fuelStation = await FuelStation.findOne({ id: id });\r\n\r\n    const password = fuelStation.password;\r\n\r\n    const name = fuelStation.name;\r\n    const ownername = fuelStation.ownername;\r\n    const phonenumber = fuelStation.phonenumber;\r\n    const address = fuelStation.address;\r\n    const arrivaltime = fuelStation.arrivaltime;\r\n    const finishtime = fuelStation.finishtime;\r\n    const status = fuelStation.status;\r\n    const queue = fuelStation.queue;\r\n\r\n    console.log(req.body)\r\n    \r\n    const changeStatus = {\r\n        id : id,\r\n        name : name,\r\n        ownername : ownername,\r\n        phonenumber : phonenumber,\r\n        address : address,\r\n        arrivaltime : arrivaltime,\r\n        finishtime : finishtime,\r\n        status : status,\r\n        //stock : req.body.stock,\r\n        stock : {\r\n            diesel: req.body.stock.diesel,\r\n            petrol: req.body.stock.petrol\r\n        },\r\n        queue: queue,\r\n        password: password\r\n\r\n    }\r\n\r\n    // console.table([ id, req.body.stock.diesel, req.body.stock.petrol])\r\n  \r\n\r\n    try {\r\n        const response = await FuelStation.findOneAndUpdate({ stationid: id }, changeStatus);\r\n        if (response) {\r\n            return res.status(200).send({ message: 'Successfully updated' })\r\n        } else {\r\n\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Unable to update' })\r\n    }\r\n\r\n}\r\n\r\nconst updatelength = async (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    const fuelStation = await FuelStation.findOne({ id: id });\r\n\r\n    const password = fuelStation.password;\r\n\r\n    const name = fuelStation.name;\r\n    const ownername = fuelStation.ownername;\r\n    const phonenumber = fuelStation.phonenumber;\r\n    const address = fuelStation.address;\r\n    const arrivaltime = fuelStation.arrivaltime;\r\n    const finishtime = fuelStation.finishtime;\r\n    const status = fuelStation.status;\r\n    const stock = fuelStation.stock;\r\n\r\n    const changeStatus = {\r\n        id: id,\r\n        name: name,\r\n        ownername: ownername,\r\n        phonenumber: phonenumber,\r\n        address: address,\r\n        arrivaltime: arrivaltime,\r\n        finishtime: finishtime,\r\n        status: status,\r\n        stock: stock,\r\n        queue: {\r\n            Car: req.body.queue.car,\r\n            Van: req.body.queue.van,\r\n            Bus: req.body.queue.bus,\r\n            Bike: req.body.queue.bike,\r\n            Tuk: req.body.queue.tuk\r\n        },\r\n        password: password\r\n\r\n    }\r\n\r\n    try {\r\n        const response = await FuelStation.findOneAndUpdate({ id: id }, changeStatus);\r\n        if (response) {\r\n            return res.status(200).send({ message: 'Successfully updated' })\r\n        } else {\r\n\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Unable to update' })\r\n    }\r\n\r\n}\r\n\r\nconst updateArrivalTime = async (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    const fuelStation = await FuelStation.findOne({ id: id });\r\n\r\n    const password = fuelStation.password;\r\n\r\n    const name = fuelStation.name;\r\n    const ownername = fuelStation.ownername;\r\n    const phonenumber = fuelStation.phonenumber;\r\n    const address = fuelStation.address;\r\n    const finishtime = fuelStation.finishtime;\r\n    const status = fuelStation.status;\r\n    const stock = fuelStation.stock;\r\n    const queue = fuelStation.queue;\r\n\r\n    const changeStatus = {\r\n        id: id,\r\n        name: name,\r\n        ownername: ownername,\r\n        phonenumber: phonenumber,\r\n        address: address,\r\n        arrivaltime: req.body.arrivaltime,\r\n        finishtime: finishtime,\r\n        status: status,\r\n        stock: stock,\r\n        queue: queue,\r\n        password: password\r\n\r\n    }\r\n\r\n    try {\r\n        const response = await FuelStation.findOneAndUpdate({ id: id }, changeStatus);\r\n        if (response) {\r\n            return res.status(200).send({ message: 'Successfully updated' })\r\n        } else {\r\n\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Unable to update' })\r\n    }\r\n\r\n}\r\n\r\nconst updateFinishTime = async (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    const fuelStation = await FuelStation.findOne({ id: id });\r\n\r\n    const password = fuelStation.password;\r\n\r\n    const name = fuelStation.name;\r\n    const ownername = fuelStation.ownername;\r\n    const phonenumber = fuelStation.phonenumber;\r\n    const address = fuelStation.address;\r\n    const arrivaltime = fuelStation.arrivaltime;\r\n    const status = fuelStation.status;\r\n    const stock = fuelStation.stock;\r\n    const queue = fuelStation.queue;\r\n\r\n    const changeStatus = {\r\n        id: id,\r\n        name: name,\r\n        ownername: ownername,\r\n        phonenumber: phonenumber,\r\n        address: address,\r\n        arrivaltime: arrivaltime,\r\n        finishtime: req.body.finishtime,\r\n        status: status,\r\n        stock: stock,\r\n        queue: queue,\r\n        password: password\r\n\r\n    }\r\n\r\n    try {\r\n        const response = await FuelStation.findOneAndUpdate({ id: id }, changeStatus);\r\n        if (response) {\r\n            return res.status(200).send({ message: 'Successfully updated' })\r\n        } else {\r\n\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Unable to update' })\r\n    }\r\n\r\n}\r\n\r\nconst updateDetails = async (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    const fuelStation = await FuelStation.findOne({ id: id });\r\n\r\n    const password = fuelStation.password;\r\n\r\n    const name = fuelStation.name;\r\n    const ownername = fuelStation.ownername;\r\n    const phonenumber = fuelStation.phonenumber;\r\n    const address = fuelStation.address;\r\n    const arrivaltime = fuelStation.arrivaltime;\r\n    const finishtime = fuelStation.finishtime;\r\n    const queue = fuelStation.queue;\r\n\r\n    const changeStatus = {\r\n        id: id,\r\n        name: name,\r\n        ownername: ownername,\r\n        phonenumber: phonenumber,\r\n        address: address,\r\n        arrivaltime: arrivaltime,\r\n        finishtime: finishtime,\r\n        status: req.body.status,\r\n        stock: req.body.stock,\r\n        queue: queue,\r\n        password: password\r\n\r\n    }\r\n\r\n    try {\r\n        const response = await FuelStation.findOneAndUpdate({ id: id }, changeStatus);\r\n        if (response) {\r\n            return res.status(200).send({ message: 'Successfully updated' })\r\n        } else {\r\n\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Unable to update' })\r\n    }\r\n\r\n}\r\n\r\nconst updateStation = async (req, res) => {\r\n    const id = req.params.id;\r\n\r\n    const fuelStation = await FuelStation.findOne({ id: id });\r\n\r\n    const password = fuelStation.password;\r\n\r\n    const name = fuelStation.name;\r\n    const ownername = fuelStation.ownername;\r\n    const phonenumber = fuelStation.phonenumber;\r\n    const address = fuelStation.address;\r\n    const arrivaltime = fuelStation.arrivaltime;\r\n    const finishtime = fuelStation.finishtime;\r\n\r\n    const changeStatus = {\r\n        id: id,\r\n        name: name,\r\n        ownername: ownername,\r\n        phonenumber: phonenumber,\r\n        address: address,\r\n        arrivaltime: arrivaltime,\r\n        finishtime: finishtime,\r\n        status: req.body.status,\r\n        stock: req.body.stock,\r\n        queue: queue,\r\n        password: password\r\n\r\n    }\r\n\r\n    try {\r\n        const response = await FuelStation.findOneAndUpdate({ id: id }, changeStatus);\r\n        if (response) {\r\n            return res.status(200).send({ message: 'Successfully updated' })\r\n        } else {\r\n\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Unable to update' })\r\n    }\r\n\r\n}\r\n\r\nconst getcount = async (req, res) => {\r\n    let value = req.params.id.trim();\r\n    console.log(\"carcount\");\r\n    try {\r\n\r\n        let fuealStationData = await FuelStation.findOne({ id: value });\r\n\r\n        if (fuealStationData) {\r\n\r\n            let carCount = fuealStationData.queue.Car;\r\n            let vanCount = fuealStationData.queue.Van;\r\n            let busCount = fuealStationData.queue.Bus;\r\n            let bikeCount = fuealStationData.queue.Bike;\r\n            let tukCount = fuealStationData.queue.Tuk;\r\n\r\n\r\n            let allCount = carCount + vanCount + busCount + bikeCount + tukCount;\r\n\r\n            // let countObject = {\r\n            //     carCount : carCount,\r\n            //     vanCount : vanCount,\r\n            //     busCount : busCount,\r\n            //     bikeCount : bikeCount,\r\n            //     allCount : allCount\r\n            // }\r\n\r\n            return res.status(200).send({ count: allCount });\r\n\r\n        } else {\r\n            return res.status(404).send({ message: 'No such vehicle type found' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\nconst getCarCount = async (req, res) => {\r\n    let value = req.params.id.trim();\r\n\r\n    try {\r\n\r\n        let fuealStationData = await FuelStation.findOne({ id: value });\r\n\r\n        if (fuealStationData) {\r\n\r\n            let carCount = fuealStationData.queue.Car;\r\n\r\n            return res.status(200).send({ count: carCount });\r\n\r\n        } else {\r\n            return res.status(404).send({ message: 'No such vehicle type found' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\nconst getVanCount = async (req, res) => {\r\n    let value = req.params.id.trim();\r\n\r\n    try {\r\n\r\n        let fuealStationData = await FuelStation.findOne({ id: value });\r\n\r\n        if (fuealStationData) {\r\n\r\n            let vanCount = fuealStationData.queue.Van;\r\n\r\n            return res.status(200).send({ count: vanCount });\r\n\r\n        } else {\r\n            return res.status(404).send({ message: 'No such vehicle type found' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\nconst getBusCount = async (req, res) => {\r\n    let value = req.params.id.trim();\r\n\r\n    try {\r\n\r\n        let fuealStationData = await FuelStation.findOne({ id: value });\r\n\r\n        if (fuealStationData) {\r\n\r\n            let busCount = fuealStationData.queue.Bus;\r\n\r\n            return res.status(200).send({ count: busCount });\r\n\r\n        } else {\r\n            return res.status(404).send({ message: 'No such vehicle type found' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\nconst getBikeCount = async (req, res) => {\r\n    let value = req.params.id.trim();\r\n\r\n    try {\r\n\r\n        let fuealStationData = await FuelStation.findOne({ id: value });\r\n\r\n        if (fuealStationData) {\r\n\r\n            let bikeCount = fuealStationData.queue.Bike;\r\n\r\n            return res.status(200).send({ count: bikeCount });\r\n\r\n        } else {\r\n            return res.status(404).send({ message: 'No such vehicle type found' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\nconst getTukCount = async (req, res) => {\r\n    let value = req.params.id.trim();\r\n\r\n    try {\r\n\r\n        let fuealStationData = await FuelStation.findOne({ id: value });\r\n\r\n        if (fuealStationData) {\r\n\r\n            let tukCount = fuealStationData.queue.Tuk;\r\n\r\n            return res.status(200).send({ count: tukCount });\r\n\r\n        } else {\r\n            return res.status(404).send({ message: 'No such vehicle type found' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    StationRegister,\r\n    getAllFuelStation,\r\n    getOneFuelStation,\r\n    searchStation,\r\n    searchByAddress,\r\n    updateStatus,\r\n    updatestock,\r\n    updatelength,\r\n    updateDetails,\r\n    getcount,\r\n    getCarCount,\r\n    getVanCount,\r\n    getBusCount,\r\n    getBikeCount,\r\n    getTukCount,\r\n    login,\r\n    updateArrivalTime,\r\n    updateFinishTime\r\n\r\n}"],"file":"station.controller.dev.js"}