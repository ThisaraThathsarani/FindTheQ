"use strict";function ownKeys(r,e){var t=Object.keys(r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(r);e&&(n=n.filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})),t.push.apply(t,n)}return t}function _objectSpread(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(t,!0).forEach(function(e){_defineProperty(r,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):ownKeys(t).forEach(function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(t,e))})}return r}function _defineProperty(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var Customer=require("../models/customer.model"),_require=require("express"),request=_require.request,bcrypt=require("bcryptjs"),auth=require("../middlewares/token"),registerCustomer=function(r,t){var n,s,a,u,o,c,i,p,m,d,b;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.body.customername,s=r.body.nic,a=r.body.phonenumber,u=r.body.vehicletype,o=r.body.arrivaltime,c=r.body.departtime,i=r.body.fueltype,p=r.body.password,m=bcrypt.genSaltSync(10),d=bcrypt.hashSync(p,m),b=new Customer({customername:n,nic:s,phonenumber:a,vehicletype:u,arrivaltime:o,departtime:c,fueltype:i,password:d}),e.prev=11,e.next=14,regeneratorRuntime.awrap(b.save());case 14:if(e.sent)return console.log("yes"),e.abrupt("return",t.status(201).send({message:"New Customer Registered to the Fuel System"}));e.next=20;break;case 20:return console.log("no"),e.abrupt("return",t.status(500).send({message:"Internal server error"}));case 22:e.next=28;break;case 24:return e.prev=24,e.t0=e.catch(11),console.log(e.t0),e.abrupt("return",t.status(400).send({message:"Error while registering the customer to the application"}));case 28:case"end":return e.stop()}},null,null,[[11,24]])},login=function(r,t){var n,s,a,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.body.customername,s=r.body.password,e.prev=2,e.next=5,regeneratorRuntime.awrap(Customer.findOne({customername:n}));case 5:if(!(a=e.sent)){e.next=15;break}if(a&&bcrypt.compareSync(s,a.password))return u=auth.generateAccessToken(n),e.abrupt("return",t.status(200).send(_objectSpread({},a.toJSON(),{token:u})));e.next=12;break;case 12:return e.abrupt("return",t.status(400).send({message:"Such user does not exist check your credentials"}));case 13:e.next=16;break;case 15:return e.abrupt("return",t.status(404).send({message:"Such user does not exist"}));case 16:e.next=21;break;case 18:return e.prev=18,e.t0=e.catch(2),e.abrupt("return",t.status(400).send({message:"Such user does not exist check your credentials"}));case 21:case"end":return e.stop()}},null,null,[[2,18]])},updateTime=function(r,t){var n,s,a,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.nic,e.next=3,regeneratorRuntime.awrap(Customer.findOne({nic:n}));case 3:return s=e.sent,a=s.password,u={customername:r.body.customername,nic:r.body.nic,phonenumber:r.body.phonenumber,vehicletype:r.body.vehicletype,arrivaltime:r.body.arrivaltime,departtime:r.body.departtime,fueltype:r.body.fueltype,password:a},e.prev=6,e.next=9,regeneratorRuntime.awrap(Customer.findOneAndUpdate({nic:n},u));case 9:if(e.sent)return e.abrupt("return",t.status(200).send({message:"Successfully update time"}));e.next=14;break;case 14:return e.abrupt("return",t.status(500).send({message:"Internal server error"}));case 15:e.next=20;break;case 17:return e.prev=17,e.t0=e.catch(6),e.abrupt("return",t.status(400).send({message:"Unable to update"}));case 20:case"end":return e.stop()}},null,null,[[6,17]])},getOneUser=function(r,t){var n,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.customername,e.prev=1,e.next=4,regeneratorRuntime.awrap(Customer.findOne({customername:n}));case 4:if(s=e.sent)return e.abrupt("return",t.json(s));e.next=9;break;case 9:return e.abrupt("return",t.status(404).send({message:"No such customer found"}));case 10:e.next=15;break;case 12:return e.prev=12,e.t0=e.catch(1),e.abrupt("return",t.status(500).send({message:"Internal Server Error"}));case 15:case"end":return e.stop()}},null,null,[[1,12]])};module.exports={registerCustomer:registerCustomer,login:login,updateTime:updateTime,getOneUser:getOneUser};
//# sourceMappingURL=customer.controller.min.js.map
