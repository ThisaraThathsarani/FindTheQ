{"version":3,"sources":["stationOwner.controller.js"],"names":["Station","require","request","bcrypt","auth","registerStation","req","res","stationid","body","ownername","stationname","phonenumber","address","arrivaltime","finishtime","fueltype","station","save","response","status","send","message","console","log","getAllStation","find","stations","json","getOneStation","stationID","params","id","findOne","searchStation","value","trim","$regex","$options","then","updateTime","changeTime","findOneAndUpdate","module","exports","login"],"mappings":"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","sourcesContent":["const Station = require('../models/stationOwner.model');\r\nconst { request } = require('express')\r\nconst bcrypt = require('bcryptjs');\r\nconst auth = require('../middlewares/token')\r\n\r\nconst registerStation = async (req, res) => {\r\n\r\n    const stationid = req.body.stationid;\r\n    const ownername = req.body.ownername;\r\n    const stationname = req.body.stationname;\r\n    const phonenumber = req.body.phonenumber;\r\n    const address = req.body.address;\r\n    const arrivaltime = req.body.arrivaltime;\r\n    const finishtime = req.body.finishtime;\r\n    const fueltype = req.body.fueltype;\r\n\r\n\r\n    const station = new Station({\r\n        stationid,\r\n        ownername,\r\n        stationname,\r\n        phonenumber,\r\n        address,\r\n        arrivaltime,\r\n        finishtime,\r\n        fueltype\r\n    })\r\n\r\n    try{\r\n        let response = await station.save();\r\n        if(response) {\r\n            return res.status(201).send({message: \"New Station Registered to the Fuel System\"})\r\n        }else {\r\n            return res.status(500).send({message: \"Internal server error\"});\r\n        }\r\n    }catch (error) {\r\n        console.log(error);\r\n        return res.status(400).send({message: \"Error while registering the station to the application\"})\r\n\r\n    }\r\n\r\n}\r\n\r\nconst getAllStation = async (req, res) => {\r\n    try {\r\n        let stations = await Station.find();\r\n        if(stations) {\r\n            return res.json(stations)\r\n        }else {\r\n            return res.status(404).send({message: 'Error on retrieving station'})\r\n        }\r\n    }catch (err) {\r\n        return res.status(500).send({ message: 'Internal server error' })\r\n    }\r\n}\r\n\r\nconst getOneStation = async (req, res) => {\r\n\r\n    const stationID = req.params.id\r\n\r\n    try {\r\n        let station = await Station.findOne({\r\n           stationID: stationID \r\n        });\r\n        if(station) {\r\n            return res.json(station)\r\n        }else {\r\n            return res.status(404).send({ message: 'No such station found' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\nconst searchStation = async (req, res) => {\r\n    let value = req.params.stationname.trim();\r\n\r\n    try {\r\n        let station = await Station.find();\r\n        if(station) {\r\n            Station.find({ stationname: { $regex: \"^\" + value + \".*\", $options: 'i' } }).then((stations) => {\r\n                res.json(stations)\r\n        \r\n            })\r\n        }else {\r\n            return res.status(404).send({ message: 'No such station found' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\nconst updateTime = async (req, res) => {\r\n    const stationid = req.params.stationid;\r\n\r\n    const station = await Station.findOne({ stationid: stationid });\r\n\r\n    const ownername = station.ownername;\r\n    const stationname = station.stationname;\r\n    const address = station.address;\r\n    const phonenumber = station.phonenumber;\r\n\r\n\r\n    const changeTime = {\r\n    stationid : stationid,\r\n    ownername : ownername,\r\n    stationname : stationname,\r\n    phonenumber : phonenumber,\r\n    address : address,\r\n    arrivaltime : req.body.arrivaltime,\r\n    finishtime : req.body.finishtime,\r\n    fueltype : req.body.fueltype,\r\n    }\r\n\r\n    try {\r\n        const response = await Station.findOneAndUpdate({ stationid: stationid } , changeTime);\r\n        if(response){\r\n            return res.status(200).send({message: 'Successfully updated'})\r\n        }else {\r\n\r\n        return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Unable to update' })\r\n    }\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    registerStation,\r\n    getAllStation,\r\n    getOneStation,\r\n    searchStation,\r\n    updateTime,\r\n    login\r\n}"],"file":"stationOwner.controller.dev.js"}